events {
    worker_connections 1024;
}

http {
    # Basic Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 20M;

    # MIME Types - PENTING untuk Swagger!
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Gzip Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # ==========================================
    # RATE LIMITING CONFIGURATION
    # ==========================================
    
    # Rate limit zone: 10MB memory, limit by IP address
    # 10MB can track ~160,000 IP addresses
    
    # General API rate limit: 100 requests per minute per IP
    limit_req_zone $binary_remote_addr zone=general_limit:10m rate=100r/m;
    
    # Strict rate limit untuk endpoints sensitif: 10 requests per minute per IP
    limit_req_zone $binary_remote_addr zone=strict_limit:10m rate=10r/m;
    
    # Authentication endpoints: 5 requests per minute per IP
    limit_req_zone $binary_remote_addr zone=auth_limit:5m rate=5r/m;
    
    # Upload endpoints: 20 requests per minute per IP
    limit_req_zone $binary_remote_addr zone=upload_limit:5m rate=20r/m;
    
    # Connection limit: Maximum 10 concurrent connections per IP
    limit_conn_zone $binary_remote_addr zone=conn_limit:10m;
    
    # Rate limit status code
    limit_req_status 429;
    limit_conn_status 429;

    # Custom error page untuk rate limit
    map $status $rate_limit_message {
        429 '{"error": "Too Many Requests", "message": "Rate limit exceeded. Please try again later.", "status": 429}';
    }

    # ==========================================
    # UPSTREAM SERVICES
    # ==========================================
    
    upstream url_service {
        server url-service:3000;
    }

    # upstream order_service {
    #     server order-service:3000;
    # }

    # upstream payment_service {
    #     server payment-service:3000;
    # }

    # ==========================================
    # MAIN SERVER BLOCK
    # ==========================================
    
    server {
        listen 80;
        server_name localhost;

        # Connection limit: max 10 concurrent connections per IP
        limit_conn conn_limit 10;

        # Custom error page untuk rate limit
        error_page 429 @rate_limit_error;

        location @rate_limit_error {
            default_type application/json;
            return 429 '{"error": "Too Many Requests", "message": "Rate limit exceeded. Please try again later.", "status": 429, "retry_after": "$limit_req_status"}';
        }

        # ==========================================
        # HEALTH CHECK (No rate limit)
        # ==========================================
        # location /health {
        #     access_log off;
        #     return 200 "healthy\n";
        #     add_header Content-Type text/plain;
        # }

        # ==========================================
        # URL SERVICE ROUTES
        # ==========================================

         # ==========================================
        # SWAGGER DOCUMENTATION (No rate limit)
        # ==========================================
        location /api/docs {
            # No rate limit untuk swagger documentation
            
            proxy_pass http://url_service/api/docs;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 90;
            
            # Allow frame embedding untuk Swagger UI
            proxy_hide_header X-Frame-Options;
        }

        # Swagger static assets (CSS, JS, JSON)
        location ~ ^/api/docs-json {
            proxy_pass http://url_service;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            add_header Content-Type application/json;
        }
        
        # Authentication endpoints - Strict rate limit
        location ~ ^/api/v1/auth {
            # 5 requests per minute, burst 3 additional requests
            limit_req zone=auth_limit burst=3 nodelay;
            
            rewrite ^/api/v1/auth/(.*)$ /api/v1/auth/$1 break;
            
            proxy_pass http://url_service;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 90;
            
            # Rate limit headers
            add_header X-RateLimit-Limit "5" always;
            add_header X-RateLimit-Remaining $limit_req_status always;
        }

        # Upload endpoints - Medium rate limit
        # location ~ ^/api/url/(upload|import) {
        #     # 20 requests per minute, burst 5 additional requests
        #     limit_req zone=upload_limit burst=5 nodelay;
            
        #     # Increase body size untuk upload
        #     client_max_body_size 50M;
            
        #     rewrite ^/api/url/(.*)$ /api/v1/$1 break;
            
        #     proxy_pass http://url_service;
        #     proxy_http_version 1.1;
        #     proxy_set_header Upgrade $http_upgrade;
        #     proxy_set_header Connection 'upgrade';
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        #     proxy_cache_bypass $http_upgrade;
        #     proxy_read_timeout 300;
            
        #     # Rate limit headers
        #     add_header X-RateLimit-Limit "20" always;
        #     add_header X-RateLimit-Remaining $limit_req_status always;
        # }

        # General URL Service endpoints. Main app in Nest
        location /api {
            # 100 requests per minute, burst 20 additional requests
            limit_req zone=general_limit burst=20 nodelay;
            
            rewrite ^/api/(.*)$ /api/$1 break;
            
            proxy_pass http://url_service;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 90;
            
            # Rate limit headers
            add_header X-RateLimit-Limit "100" always;
            add_header X-RateLimit-Remaining $limit_req_status always;
        }

        # ==========================================
        # ORDER SERVICE ROUTES
        # ==========================================
        
        # Order creation/payment - Strict rate limit
        # location ~ ^/api/order/(create|checkout|payment) {
        #     limit_req zone=strict_limit burst=2 nodelay;
        #     
        #     rewrite ^/api/order/(.*)$ /api/v1/$1 break;
        #     
        #     proxy_pass http://order_service;
        #     proxy_http_version 1.1;
        #     proxy_set_header Upgrade $http_upgrade;
        #     proxy_set_header Connection 'upgrade';
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        #     proxy_cache_bypass $http_upgrade;
        #     proxy_read_timeout 90;
        #     
        #     add_header X-RateLimit-Limit "10" always;
        #     add_header X-RateLimit-Remaining $limit_req_status always;
        # }

        # General order endpoints
        # location /api/order {
        #     limit_req zone=general_limit burst=20 nodelay;
        #     
        #     rewrite ^/api/order/(.*)$ /api/v1/$1 break;
        #     
        #     proxy_pass http://order_service;
        #     proxy_http_version 1.1;
        #     proxy_set_header Upgrade $http_upgrade;
        #     proxy_set_header Connection 'upgrade';
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        #     proxy_cache_bypass $http_upgrade;
        #     proxy_read_timeout 90;
        #     
        #     add_header X-RateLimit-Limit "100" always;
        #     add_header X-RateLimit-Remaining $limit_req_status always;
        # }

        # ==========================================
        # PAYMENT SERVICE ROUTES
        # ==========================================
        
        # Payment processing - Very strict rate limit
        # location ~ ^/api/payment/(process|callback|webhook) {
        #     limit_req zone=strict_limit burst=2 nodelay;
        #     
        #     rewrite ^/api/payment/(.*)$ /api/v1/$1 break;
        #     
        #     proxy_pass http://payment_service;
        #     proxy_http_version 1.1;
        #     proxy_set_header Upgrade $http_upgrade;
        #     proxy_set_header Connection 'upgrade';
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        #     proxy_cache_bypass $http_upgrade;
        #     proxy_read_timeout 90;
        #     
        #     add_header X-RateLimit-Limit "10" always;
        #     add_header X-RateLimit-Remaining $limit_req_status always;
        # }

        # General payment endpoints
        # location /api/payment {
        #     limit_req zone=general_limit burst=20 nodelay;
        #     
        #     rewrite ^/api/payment/(.*)$ /api/v1/$1 break;
        #     
        #     proxy_pass http://payment_service;
        #     proxy_http_version 1.1;
        #     proxy_set_header Upgrade $http_upgrade;
        #     proxy_set_header Connection 'upgrade';
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        #     proxy_cache_bypass $http_upgrade;
        #     proxy_read_timeout 90;
        #     
        #     add_header X-RateLimit-Limit "100" always;
        #     add_header X-RateLimit-Remaining $limit_req_status always;
        # }

        # ==========================================
        # DEFAULT 404
        # ==========================================
        location / {
            return 404 '{"error": "Not Found", "message": "The requested resource was not found"}';
            add_header Content-Type application/json;
        }
    }
}